Index: src/app/components/features/user/UserProfileHeader.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { prefectureLabels } from '@/utils/userUtils';\nimport { CurrentPrefecture } from '@/gql/graphql';\n\ninterface UserProfileHeaderProps {\n  id: string;\n  name: string;\n  image: string;\n  bio: string;\n  currentPrefecture?: CurrentPrefecture | null;\n  isOwner: boolean;\n}\n\nexport const UserProfileHeader: React.FC<UserProfileHeaderProps> = ({\n  id,\n  name,\n  image,\n  bio,\n  currentPrefecture,\n  isOwner\n}) => {\n  return (\n    <div className=\"bg-white rounded-lg p-6 shadow-sm mb-6\">\n      <div className=\"flex flex-col items-center md:flex-row md:items-start gap-6\">\n        <div className=\"relative w-24 h-24 rounded-full overflow-hidden\">\n          <Image\n            src={image || '/placeholder-profile.jpg'}\n            alt={name}\n            fill\n            className=\"object-cover\"\n            priority\n          />\n        </div>\n        \n        <div className=\"flex-1\">\n          <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-2\">\n            <h1 className=\"text-2xl font-bold\">{name}</h1>\n            {isOwner && (\n              <Link href=\"/users/me/edit\">\n                <Button variant=\"secondary\" size=\"sm\" className=\"mt-2 md:mt-0\">\n                  プロフィールを編集\n                </Button>\n              </Link>\n            )}\n          </div>\n          \n          {currentPrefecture && (\n            <div className=\"text-sm text-gray-500 mb-2\">\n              {prefectureLabels[currentPrefecture] || '不明'}\n            </div>\n          )}\n          \n          {bio && (\n            <div className=\"mt-2 text-gray-700 whitespace-pre-line\">\n              {bio}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfileHeader;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/components/features/user/UserProfileHeader.tsx b/src/app/components/features/user/UserProfileHeader.tsx
--- a/src/app/components/features/user/UserProfileHeader.tsx	(revision 57a45f213e11504a8cbc771cf9a07e2bc9e5f05e)
+++ b/src/app/components/features/user/UserProfileHeader.tsx	(date 1746444811671)
@@ -42,7 +42,7 @@
             <h1 className="text-2xl font-bold">{name}</h1>
             {isOwner && (
               <Link href="/users/me/edit">
-                <Button variant="secondary" size="sm" className="mt-2 md:mt-0">
+                <Button variant="secondary" size="sm">
                   プロフィールを編集
                 </Button>
               </Link>
Index: src/types/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { User as GraphQLUser } from \"@/gql/graphql\";\n\nexport type AuthInfo = {\n  uid?: string;\n  providerIds?: string[];\n  user?: GraphQLUser | null;\n};\n\nexport type LIFFLoginResponse = {\n  customToken: string;\n  profile: LINEProfile;\n};\n\ntype LINEProfile = {\n  userId: string;\n  displayName: string;\n  pictureUrl?: string;\n  statusMessage?: string;\n  email?: string;\n  language?: string;\n};\n\nexport type User = {\n  id: string;\n  name: string;\n  image?: string | null;\n  bio?: string | null;\n  sysRole?: string | null;\n  urlFacebook?: string | null;\n  urlInstagram?: string | null;\n  urlWebsite?: string | null;\n  urlX?: string | null;\n  urlYoutube?: string | null;\n};\n\nexport type SocialLinkType = 'x' | 'instagram' | 'facebook' | 'youtube' | 'website';\n\nexport type SocialLink = {\n  type: SocialLinkType;\n  url: string;\n};\n\n// Portfolio related types\nexport type PortfolioCategory = 'QUEST' | 'ACTIVITY_REPORT' | 'INTERVIEW' | 'OPPORTUNITY' | 'ACTIVITY';\nexport type PortfolioType = 'opportunity' | 'activity_report' | 'quest';\n\nexport interface PortfolioStyle {\n  bg: string;\n  text: string;\n}\n\nexport const PORTFOLIO_CATEGORY_STYLES: Record<PortfolioCategory, PortfolioStyle> = {\n  QUEST: { bg: '#FEF9C3', text: '#854D0E' },\n  ACTIVITY_REPORT: { bg: '#DCE7DD', text: '#166534' },\n  INTERVIEW: { bg: '#DCE7DD', text: '#166534' },\n  OPPORTUNITY: { bg: '#DBEAFE', text: '#1E40AF' },\n  ACTIVITY: { bg: '#FCE7F3', text: '#831843' },\n} as const;\n\nexport interface PortfolioParticipant {\n  id: string;\n  name: string;\n  image: string | null;\n}\n\nexport type ReservationStatus = 'APPLIED' | 'ACCEPTED' | 'REJECTED' | 'CANCELED';\n\nexport interface Portfolio {\n  id: string;\n  type: PortfolioType;\n  title: string;\n  date: string;\n  location: string | null;\n  category: PortfolioCategory;\n  participants: PortfolioParticipant[];\n  image: string | null;\n  source?: string;\n  reservationStatus?: ReservationStatus | null;\n}\n\nexport type Community = {\n  id: string;\n  title: string;\n  description: string;\n  icon?: string;\n  location: {\n    prefecture: string;\n    city: string;\n    address: string;\n    lat?: number;\n    lng?: number;\n  };\n  members: {\n    id: string;\n    name: string;\n    title: string;\n    bio?: string;\n    image?: string;\n  }[];\n  socialLinks?: {\n    type: \"twitter\" | \"instagram\" | \"facebook\" | \"website\" | \"youtube\";\n    url: string;\n  }[];\n  customLinks?: {\n    title: string;\n    url: string;\n  }[];\n  speakerDeckEmbed?: {\n    title: string;\n    embedUrl: string;\n  };\n  opportunities: Opportunity[];\n  createdAt: Date;\n  updatedAt: Date;\n};\n\nexport type Opportunity = {\n  id: string;\n  title: string;\n  description: string;\n  type: \"EVENT\" | \"QUEST\";\n  status: \"open\" | \"in_progress\" | \"closed\";\n  communityId: string;\n  hostId: string;\n  startsAt: Date | string;\n  endsAt: Date | string;\n  createdAt: Date | string;\n  updatedAt: Date | string;\n  isReservableWithTicket?: boolean;\n  host: {\n    name: string;\n    image: string | null;\n    title: string;\n    bio: string;\n  };\n  images: string[];\n  location: {\n    name: string;\n    address: string;\n    isOnline: boolean;\n    meetingUrl?: string;\n    lat?: number;\n    lng?: number;\n  };\n  community?: {\n    id: string;\n    title: string;\n    description: string;\n    icon: string;\n  };\n  recommendedFor: string[];\n  relatedArticles?: RelatedArticle[];\n  capacity: number;\n  pointsForComplete?: number;\n  pointsForJoin?: number;\n  participants: Participant[];\n  body?: string;\n  createdByUser?: {\n    id: string;\n    name: string;\n    image: string | null;\n    articlesAboutMe?: {\n      edges: Array<{\n        node: Partial<Article>;\n      }>;\n    };\n    opportunitiesCreatedByMe?: {\n      edges: Opportunity[];\n    };\n  };\n  place?: {\n    name: string;\n    address: string;\n    latitude?: number;\n    longitude?: number;\n  };\n  requireApproval?: boolean;\n  pointsRequired?: number;\n  feeRequired?: number;\n  slots?: {\n    edges: Array<{\n      node: {\n        id: string;\n        startsAt: Date | string;\n        endsAt: Date | string;\n        participations?: {\n          edges: Array<{\n            node: {\n              id: string;\n              status: string;\n              user: {\n                id: string;\n                name: string;\n                image: string | null;\n              };\n            };\n          }>;\n        };\n      };\n    }>;\n  };\n  requiredUtilities?: {\n    id: string;\n  }[];\n};\n\nexport type RelatedArticle = {\n  title: string;\n  url: string;\n  type: \"interview\" | \"article\";\n  image?: string;\n  description?: string;\n  publishedAt: string;\n};\n\nexport type ArticleType = \"activity_report\" | \"interview\" | \"column\";\n\nexport type Article = {\n  id: string;\n  title: string;\n  description: string;\n  content: string;\n  type: ArticleType;\n  thumbnail: string;\n  publishedAt: string;\n  author: {\n    name: string;\n    image: string;\n    bio?: string;\n  };\n  createdAt: string;\n  updatedAt: string | null;\n};\n\nexport type Activity = {\n  id: string;\n  title: string;\n  description: string;\n  communityId: string;\n  price: number;\n  duration: number; // minutes\n  location: {\n    name: string;\n    address: string;\n    prefecture: string;\n    city: string;\n    lat?: number;\n    lng?: number;\n  };\n  images: string[];\n  capacity: number;\n  participants?: User[];\n  schedule: {\n    startTime: string;\n    endTime: string;\n    daysOfWeek: number[]; // 0-6, 0 is Sunday\n  };\n  timeSchedule: {\n    time: string;\n    description: string;\n  }[];\n  precautions: string[];\n  host: {\n    name: string;\n    image: string;\n    bio: string;\n  };\n  status: \"open\" | \"closed\";\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type Participant = {\n  id: string;\n  name: string;\n  image: string | null;\n};\n\nexport type ParticipationImage = {\n  id: string;\n  url: string;\n  caption: string | null;\n  participationId: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type Participation = {\n  node: {\n    id: string;\n    status: string;\n    reason: string;\n    images?: ParticipationImage[];\n    user: {\n      id: string;\n      name: string;\n      image: string | null;\n    };\n    reservation?: {\n      id: string;\n      opportunitySlot: {\n        id: string;\n        capacity: number;\n        startsAt: Date | string;\n        endsAt: Date | string;\n        hostingStatus: string;\n      };\n      participations?: Array<{\n        id: string;\n        user: {\n          id: string;\n          name: string;\n          image: string | null;\n        };\n      }>;\n    };\n  };\n};\n\nexport type ContentType = \"EXPERIENCE\" | \"QUEST\" | \"EVENT\" | \"ARTICLE\";\n\nexport type DateFilter = {\n  startDate: Date | null;\n  endDate: Date | null;\n};\n\nexport type OpportunityEdge = {\n  node: Opportunity;\n};\n\nexport type OpportunityConnection = {\n  edges: OpportunityEdge[];\n  pageInfo: {\n    hasNextPage: boolean;\n    endCursor: string;\n  };\n  totalCount?: number;\n};\n\nexport type GetOpportunitiesData = {\n  upcoming: OpportunityConnection;\n  featured: OpportunityConnection;\n  all: OpportunityConnection;\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/types/index.ts b/src/types/index.ts
--- a/src/types/index.ts	(revision 57a45f213e11504a8cbc771cf9a07e2bc9e5f05e)
+++ b/src/types/index.ts	(date 1746445547732)
@@ -40,7 +40,6 @@
   url: string;
 };
 
-// Portfolio related types
 export type PortfolioCategory = 'QUEST' | 'ACTIVITY_REPORT' | 'INTERVIEW' | 'OPPORTUNITY' | 'ACTIVITY';
 export type PortfolioType = 'opportunity' | 'activity_report' | 'quest';
 
